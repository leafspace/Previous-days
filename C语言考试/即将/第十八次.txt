━━━━━━━━━━━━━━━━
七、程序填空   共1题 （共计20分）
━━━━━━━━━━━━━━━━

第1题 （20.0分）
/*-------------------------------------------------------
【程序填空】
---------------------------------------------------------
程序功能：在一行英文文本中查找给定的单词。
文本由若干个单词组成，单词之间由空格间隔。
函数find完成在s字符串中查找t中包含的单词。
如找到，函数返回t字符串出现的次数，并将所
有出现的位置保存在数组pos中。
源程序如下：
---------------------------------------------------------*/

#include <stdio.h>
#include <ctype.h>
#include <string.h>
int find(char s[],char t[],int p[])
{
  int i,j,k=0;
char w[20];
for(i=0;s[i]!=0;i++)
{  if(isalpha(s[i]))
{
        for(j=0;s[i+j]!=' '&&s[i+j]!=0;j++)
           【?】;
        w[j]=0;
        if(strcmp(w,t)==0)   p[k++]=i;
         i=【?】;
}
}
return k;
}
int main()
{
  char text[100]={"Xian an ancient city in landlocked Shaanxi Province"},word[20];
  int i,j,pos[20];
  printf("输入要查找的单词");
  gets(word);
  i=find(text,word,pos);
  if(i!=0)
    for(j=0;j<i;j++)
      printf("text[%d]\n",pos[j]);
  return 0;
}


━━━━━━━━━━━━━━━━
八、程序改错   共1题 （共计30分）
━━━━━━━━━━━━━━━━

第1题 （30.0分）
/*------------------------------------------------------        
【程序改错】
--------------------------------------------------------

程序功能：下面左侧的一个4*4的数组元素
经程序处理后成为右侧的数组形式。
1        2        3        4
5        6        7        8
9        10        11        12
13        14        15        16


1         5        3        13
2        6        10        8
9        7        11        15
4        14        12        16
下面程序存在错误，请改正.
--------------------------------------------------------*/

#include "stdio.h"
int  main()
{
 int a[4][4]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16},m,k,t;
 for(m=0;m<4;m++)
/**********FOUND**********/
    for(k=0;k<4;k++)
/**********FOUND**********/
      if((m+k)%2==0)
        t=a[m][k],a[m][k]=a[k][m];a[k][m]=t;
  for(m=0;m<4;m++)
  {  for(k=0;k<4;k++)
/**********FOUND**********/
        printf("%3f",a[m][k]);
    printf("\n");
  }
  return 0;
}


━━━━━━━━━━━━━━━━
九、程序设计   共1题 （共计30分）
━━━━━━━━━━━━━━━━

第1题 （30.0分）
/*------------------------------------------------
【程序设计】
-------------------------------------------------- 
程序功能：二维字符数组str中的若干个
字符串长度不等，以最长的字符串长度为准，
小于该长度的 字符串前部添加若干个"*"，
使得所有字符串都等长，程序中不得使用
系统提供的任何字符处理函数。
编写程序：
1．        编写int  getmaxlen(char str[][20],int n,int len[]),
函数，求出str中每个字符串的实际长度值并存入
数组len中，将字符串的最大长度返回。
2．        编写void fillstar（char str[][20]，
int len[]，int n，int maxlen）函数，
将str数组中长度小于maxlen的字符串
前部填充若干字符"*"，填充后使得字符
串长度等于maxlen，str数组中各字符串
的长度保存在len数组对应的元素中。
主函数如下：
--------------------------------------------------*/ 

#include "stdio.h"
#include "stdlio.h"
int  getmaxlen(char str[][100],int n,int len[])
{
   /**********Program**********/
  
  
  
  
  
  
  /**********  End  **********/
}
void fillstar(char str[][100],int len[],int n,int maxlen)
{
   /**********Program**********/
  
  
  
  
  
  
  /**********  End  **********/
}

#include "stdio.h"
#include "stdlib.h"


int main()
{   
        char str[5][100]={{"error"},{"getmaxlen"},{"document"},{"missing"},{"and"}};
        int len[5],i,max;
        FILE *fp;
        max=getmaxlen(str,5,len);
        fillstar(str,len,5,max);
        if((fp=fopen("DATA.TXT","w"))==NULL)
        {
                 printf("file open error\n");
                 exit(0);
        }
        for(i=0;i<5;i++)
        {   printf("%s\n",str[i]);
            fprintf(fp,"%s\n",str[i]);
        }
        fclose(fp);
        return 0;
}



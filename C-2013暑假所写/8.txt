/*
       编写程序，验证：对任意一个三个数字不全部相同的三位正整数（可以有两位是相同的），由这三个数字组成的最大数减去
最小数，得到新的数，对新的数重复进行上述处理，最后总能得到495。
　　   ?运行程序时，输入需要验证的数，如果输入的数数字完全相同，则要求重新输入；若输入数据合法，则在屏幕上显示验证
过程；
　　   ?程序中应定义一个求给定三位数的数字重新排列得到的最大和最小数的通用过程。

*/
#include<stdio.h>
int zds(int n)
{
    int a[3],t;
    a[0]=n%10;  
    a[1]=n%100/10;
    a[2]=n/100;
    if(a[0]<a[1])   
            {
                t=a[0];
                a[0]=a[1];
                a[1]=t;
            } 
    if(a[1]<a[2])
            {
                t=a[1];
                a[1]=a[2];
                a[2]=t;
            } 
    if(a[0]<a[1])
            {
                t=a[0];
                a[0]=a[1];
                a[1]=t;
            } 
     return a[0]*100+a[1]*10+a[2];
}
int zxs(int n)
{
     
    int a[3],t;
    a[0]=n%10;  
    a[1]=n%100/10;
    a[2]=n/100;
    if(a[0]>a[1])   
            {
                t=a[0];
                a[0]=a[1];
                a[1]=t;
            } 
    if(a[1]>a[2])
            {
                t=a[1];
                a[1]=a[2];
                a[2]=t;
            } 
    if(a[0]>a[1])
            {
                t=a[0];
                a[0]=a[1];
                a[1]=t;
            } 
     return a[0]*100+a[1]*10+a[2];
}
void main()
{
    int n,xs,ds;
    do
       {
          scanf("%d",&n);
          if(n%10!=n/100||n%10!=n/10%10)   break;

       }while(1);
    do
       {
          xs=zxs(n);
          ds=zds(n);
          n=ds-xs;
          printf("%4d-%4d=%4d\n",ds,xs,n);
          if(n<100)   n=n*10;
        }while(n>495);
     if(n==495)   printf("是yes");
     else         printf("否no");
}
